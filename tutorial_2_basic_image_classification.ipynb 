{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MhoQ0WE77laV"
      },
      "source": [
        "##### Copyright 2018 The TensorFlow Authors."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "cellView": "form",
        "id": "_ckMIh7O7s6D"
      },
      "outputs": [],
      "source": [
        "#@title Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "# you may not use this file except in compliance with the License.\n",
        "# You may obtain a copy of the License at\n",
        "#\n",
        "# https://www.apache.org/licenses/LICENSE-2.0\n",
        "#\n",
        "# Unless required by applicable law or agreed to in writing, software\n",
        "# distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "# See the License for the specific language governing permissions and\n",
        "# limitations under the License."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "cellView": "form",
        "id": "vasWnqRgy1H4"
      },
      "outputs": [],
      "source": [
        "#@title MIT License\n",
        "#\n",
        "# Copyright (c) 2017 François Chollet\n",
        "#\n",
        "# Permission is hereby granted, free of charge, to any person obtaining a\n",
        "# copy of this software and associated documentation files (the \"Software\"),\n",
        "# to deal in the Software without restriction, including without limitation\n",
        "# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n",
        "# and/or sell copies of the Software, and to permit persons to whom the\n",
        "# Software is furnished to do so, subject to the following conditions:\n",
        "#\n",
        "# The above copyright notice and this permission notice shall be included in\n",
        "# all copies or substantial portions of the Software.\n",
        "#\n",
        "# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n",
        "# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n",
        "# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n",
        "# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n",
        "# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n",
        "# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n",
        "# DEALINGS IN THE SOFTWARE."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jYysdyb-CaWM"
      },
      "source": [
        "# Basic classification: Classify images of clothing"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "S5Uhzt6vVIB2"
      },
      "source": [
        "<table class=\"tfo-notebook-buttons\" align=\"left\">\n",
        "  <td>\n",
        "    <a target=\"_blank\" href=\"https://www.tensorflow.org/tutorials/keras/classification\"><img src=\"https://www.tensorflow.org/images/tf_logo_32px.png\" />View on TensorFlow.org</a>\n",
        "  </td>\n",
        "  <td>\n",
        "    <a target=\"_blank\" href=\"https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/keras/classification.ipynb\"><img src=\"https://www.tensorflow.org/images/colab_logo_32px.png\" />Run in Google Colab</a>\n",
        "  </td>\n",
        "  <td>\n",
        "    <a target=\"_blank\" href=\"https://github.com/tensorflow/docs/blob/master/site/en/tutorials/keras/classification.ipynb\"><img src=\"https://www.tensorflow.org/images/GitHub-Mark-32px.png\" />View source on GitHub</a>\n",
        "  </td>\n",
        "  <td>\n",
        "    <a href=\"https://storage.googleapis.com/tensorflow_docs/docs/site/en/tutorials/keras/classification.ipynb\"><img src=\"https://www.tensorflow.org/images/download_logo_32px.png\" />Download notebook</a>\n",
        "  </td>\n",
        "</table>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FbVhjPpzn6BM"
      },
      "source": [
        "This guide trains a neural network model to classify images of clothing, like sneakers and shirts. It's okay if you don't understand all the details; this is a fast-paced overview of a complete TensorFlow program with the details explained as you go.\n",
        "\n",
        "This guide uses [tf.keras](https://www.tensorflow.org/guide/keras), a high-level API to build and train models in TensorFlow."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "dzLKpmZICaWN",
        "outputId": "db988a19-eb0e-4c3b-a37e-3482a9795446",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2.17.1\n"
          ]
        }
      ],
      "source": [
        "# TensorFlow and tf.keras\n",
        "import tensorflow as tf\n",
        "\n",
        "# Helper libraries\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "print(tf.__version__)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yR0EdgrLCaWR"
      },
      "source": [
        "## Import the Fashion MNIST dataset"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DLdCchMdCaWQ"
      },
      "source": [
        "This guide uses the [Fashion MNIST](https://github.com/zalandoresearch/fashion-mnist) dataset which contains 70,000 grayscale images in 10 categories. The images show individual articles of clothing at low resolution (28 by 28 pixels), as seen here:\n",
        "\n",
        "<table>\n",
        "  <tr><td>\n",
        "    <img src=\"https://tensorflow.org/images/fashion-mnist-sprite.png\"\n",
        "         alt=\"Fashion MNIST sprite\"  width=\"600\">\n",
        "  </td></tr>\n",
        "  <tr><td align=\"center\">\n",
        "    <b>Figure 1.</b> <a href=\"https://github.com/zalandoresearch/fashion-mnist\">Fashion-MNIST samples</a> (by Zalando, MIT License).<br/>&nbsp;\n",
        "  </td></tr>\n",
        "</table>\n",
        "\n",
        "Fashion MNIST is intended as a drop-in replacement for the classic [MNIST](http://yann.lecun.com/exdb/mnist/) dataset—often used as the \"Hello, World\" of machine learning programs for computer vision. The MNIST dataset contains images of handwritten digits (0, 1, 2, etc.) in a format identical to that of the articles of clothing you'll use here.\n",
        "\n",
        "This guide uses Fashion MNIST for variety, and because it's a slightly more challenging problem than regular MNIST. Both datasets are relatively small and are used to verify that an algorithm works as expected. They're good starting points to test and debug code.\n",
        "\n",
        "Here, 60,000 images are used to train the network and 10,000 images to evaluate how accurately the network learned to classify images. You can access the Fashion MNIST directly from TensorFlow. Import and [load the Fashion MNIST data](https://www.tensorflow.org/api_docs/python/tf/keras/datasets/fashion_mnist/load_data) directly from TensorFlow:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "7MqDQO0KCaWS",
        "outputId": "dbd421d7-c2fc-49d4-f945-d849147591df",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n",
            "\u001b[1m29515/29515\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n",
            "\u001b[1m26421880/26421880\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n",
            "\u001b[1m5148/5148\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n",
            "\u001b[1m4422102/4422102\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 0us/step\n"
          ]
        }
      ],
      "source": [
        "fashion_mnist = tf.keras.datasets.fashion_mnist\n",
        "\n",
        "(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "t9FDsUlxCaWW"
      },
      "source": [
        "Loading the dataset returns four NumPy arrays:\n",
        "\n",
        "* The `train_images` and `train_labels` arrays are the *training set*—the data the model uses to learn.\n",
        "* The model is tested against the *test set*, the `test_images`, and `test_labels` arrays.\n",
        "\n",
        "The images are 28x28 NumPy arrays, with pixel values ranging from 0 to 255. The *labels* are an array of integers, ranging from 0 to 9. These correspond to the *class* of clothing the image represents:\n",
        "\n",
        "<table>\n",
        "  <tr>\n",
        "    <th>Label</th>\n",
        "    <th>Class</th>\n",
        "  </tr>\n",
        "  <tr>\n",
        "    <td>0</td>\n",
        "    <td>T-shirt/top</td>\n",
        "  </tr>\n",
        "  <tr>\n",
        "    <td>1</td>\n",
        "    <td>Trouser</td>\n",
        "  </tr>\n",
        "    <tr>\n",
        "    <td>2</td>\n",
        "    <td>Pullover</td>\n",
        "  </tr>\n",
        "    <tr>\n",
        "    <td>3</td>\n",
        "    <td>Dress</td>\n",
        "  </tr>\n",
        "    <tr>\n",
        "    <td>4</td>\n",
        "    <td>Coat</td>\n",
        "  </tr>\n",
        "    <tr>\n",
        "    <td>5</td>\n",
        "    <td>Sandal</td>\n",
        "  </tr>\n",
        "    <tr>\n",
        "    <td>6</td>\n",
        "    <td>Shirt</td>\n",
        "  </tr>\n",
        "    <tr>\n",
        "    <td>7</td>\n",
        "    <td>Sneaker</td>\n",
        "  </tr>\n",
        "    <tr>\n",
        "    <td>8</td>\n",
        "    <td>Bag</td>\n",
        "  </tr>\n",
        "    <tr>\n",
        "    <td>9</td>\n",
        "    <td>Ankle boot</td>\n",
        "  </tr>\n",
        "</table>\n",
        "\n",
        "Each image is mapped to a single label. Since the *class names* are not included with the dataset, store them here to use later when plotting the images:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "IjnLH5S2CaWx"
      },
      "outputs": [],
      "source": [
        "class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',\n",
        "               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Brm0b_KACaWX"
      },
      "source": [
        "## Explore the data\n",
        "\n",
        "Let's explore the format of the dataset before training the model. The following shows there are 60,000 images in the training set, with each image represented as 28 x 28 pixels:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "zW5k_xz1CaWX",
        "outputId": "6145112b-fbe2-4107-f278-ca7e95845b9b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(60000, 28, 28)"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "train_images.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cIAcvQqMCaWf"
      },
      "source": [
        "Likewise, there are 60,000 labels in the training set:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "TRFYHB2mCaWb",
        "outputId": "a5906e6e-a162-40e2-8f7c-9016d571de2a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "60000"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "len(train_labels)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YSlYxFuRCaWk"
      },
      "source": [
        "Each label is an integer between 0 and 9:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "XKnCTHz4CaWg",
        "outputId": "3eca1dc1-94e5-4a4a-d9db-18f9f787d789",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([9, 0, 0, ..., 3, 0, 5], dtype=uint8)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "train_labels"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TMPI88iZpO2T"
      },
      "source": [
        "There are 10,000 images in the test set. Again, each image is represented as 28 x 28 pixels:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "id": "2KFnYlcwCaWl",
        "outputId": "6a4e0d56-de62-459c-8ad3-ce1c994512e2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10000, 28, 28)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "test_images.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rd0A0Iu0CaWq"
      },
      "source": [
        "And the test set contains 10,000 images labels:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "id": "iJmPr5-ACaWn",
        "outputId": "68a86c0a-7c5c-47c2-aed5-6bae9c9b4e1a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10000"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "len(test_labels)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ES6uQoLKCaWr"
      },
      "source": [
        "## Preprocess the data\n",
        "\n",
        "The data must be preprocessed before training the network. If you inspect the first image in the training set, you will see that the pixel values fall in the range of 0 to 255:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "id": "m4VEw8Ud9Quh",
        "outputId": "df7c5272-a08c-4ec6-8271-222d3c030d21",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure()\n",
        "plt.imshow(train_images[0])\n",
        "plt.colorbar()\n",
        "plt.grid(False)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Wz7l27Lz9S1P"
      },
      "source": [
        "Scale these values to a range of 0 to 1 before feeding them to the neural network model. To do so, divide the values by 255. It's important that the *training set* and the *testing set* be preprocessed in the same way:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "id": "bW5WzIPlCaWv"
      },
      "outputs": [],
      "source": [
        "train_images = train_images / 255.0\n",
        "\n",
        "test_images = test_images / 255.0"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ee638AlnCaWz"
      },
      "source": [
        "To verify that the data is in the correct format and that you're ready to build and train the network, let's display the first 25 images from the *training set* and display the class name below each image."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "id": "oZTImqg_CaW1",
        "outputId": "6cfa2850-9916-4780-e8d5-eb080dd3c4a2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 826
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x1000 with 25 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.figure(figsize=(10,10))\n",
        "for i in range(25):\n",
        "    plt.subplot(5,5,i+1)\n",
        "    plt.xticks([])\n",
        "    plt.yticks([])\n",
        "    plt.grid(False)\n",
        "    plt.imshow(train_images[i], cmap=plt.cm.binary)\n",
        "    plt.xlabel(class_names[train_labels[i]])\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "59veuiEZCaW4"
      },
      "source": [
        "## Build the model\n",
        "\n",
        "Building the neural network requires configuring the layers of the model, then compiling the model."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Gxg1XGm0eOBy"
      },
      "source": [
        "### Set up the layers\n",
        "\n",
        "The basic building block of a neural network is the [*layer*](https://www.tensorflow.org/api_docs/python/tf/keras/layers). Layers extract representations from the data fed into them. Hopefully, these representations are meaningful for the problem at hand.\n",
        "\n",
        "Most of deep learning consists of chaining together simple layers. Most layers, such as `tf.keras.layers.Dense`, have parameters that are learned during training."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "id": "9ODch-OFCaW4",
        "outputId": "b118ea06-7402-4425-8918-68e7479335dc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/keras/src/layers/reshaping/flatten.py:37: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
            "  super().__init__(**kwargs)\n"
          ]
        }
      ],
      "source": [
        "model = tf.keras.Sequential([\n",
        "    tf.keras.layers.Flatten(input_shape=(28, 28)),\n",
        "    tf.keras.layers.Dense(128, activation='relu'),\n",
        "    tf.keras.layers.Dense(10)\n",
        "])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gut8A_7rCaW6"
      },
      "source": [
        "The first layer in this network, `tf.keras.layers.Flatten`, transforms the format of the images from a two-dimensional array (of 28 by 28 pixels) to a one-dimensional array (of 28 * 28 = 784 pixels). Think of this layer as unstacking rows of pixels in the image and lining them up. This layer has no parameters to learn; it only reformats the data.\n",
        "\n",
        "After the pixels are flattened, the network consists of a sequence of two `tf.keras.layers.Dense` layers. These are densely connected, or fully connected, neural layers. The first `Dense` layer has 128 nodes (or neurons). The second (and last) layer returns a logits array with length of 10. Each node contains a score that indicates the current image belongs to one of the 10 classes.\n",
        "\n",
        "### Compile the model\n",
        "\n",
        "Before the model is ready for training, it needs a few more settings. These are added during the model's [*compile*](https://www.tensorflow.org/api_docs/python/tf/keras/Model#compile) step:\n",
        "\n",
        "* [*Optimizer*](https://www.tensorflow.org/api_docs/python/tf/keras/optimizers) —This is how the model is updated based on the data it sees and its loss function.\n",
        "* [*Loss function*](https://www.tensorflow.org/api_docs/python/tf/keras/losses) —This measures how accurate the model is during training. You want to minimize this function to \"steer\" the model in the right direction.\n",
        "* [*Metrics*](https://www.tensorflow.org/api_docs/python/tf/keras/metrics) —Used to monitor the training and testing steps. The following example uses *accuracy*, the fraction of the images that are correctly classified."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "id": "Lhan11blCaW7"
      },
      "outputs": [],
      "source": [
        "model.compile(optimizer='adam',\n",
        "              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),\n",
        "              metrics=['accuracy'])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qKF6uW-BCaW-"
      },
      "source": [
        "## Train the model\n",
        "\n",
        "Training the neural network model requires the following steps:\n",
        "\n",
        "1. Feed the training data to the model. In this example, the training data is in the `train_images` and `train_labels` arrays.\n",
        "2. The model learns to associate images and labels.\n",
        "3. You ask the model to make predictions about a test set—in this example, the `test_images` array.\n",
        "4. Verify that the predictions match the labels from the `test_labels` array.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Z4P4zIV7E28Z"
      },
      "source": [
        "### Feed the model\n",
        "\n",
        "To start training,  call the [`model.fit`](https://www.tensorflow.org/api_docs/python/tf/keras/Model#fit) method—so called because it \"fits\" the model to the training data:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "id": "xvwvpA64CaW_",
        "outputId": "4d85c505-9902-4829-edf9-6088a32cbaf4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 3ms/step - accuracy: 0.7805 - loss: 0.6402\n",
            "Epoch 2/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 2ms/step - accuracy: 0.8613 - loss: 0.3848\n",
            "Epoch 3/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 3ms/step - accuracy: 0.8770 - loss: 0.3407\n",
            "Epoch 4/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 3ms/step - accuracy: 0.8832 - loss: 0.3189\n",
            "Epoch 5/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 3ms/step - accuracy: 0.8900 - loss: 0.2975\n",
            "Epoch 6/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 2ms/step - accuracy: 0.8940 - loss: 0.2841\n",
            "Epoch 7/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 3ms/step - accuracy: 0.8989 - loss: 0.2735\n",
            "Epoch 8/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 2ms/step - accuracy: 0.9043 - loss: 0.2560\n",
            "Epoch 9/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 3ms/step - accuracy: 0.9042 - loss: 0.2496\n",
            "Epoch 10/10\n",
            "\u001b[1m1875/1875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 2ms/step - accuracy: 0.9113 - loss: 0.2382\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.history.History at 0x7dccf81d8d60>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "model.fit(train_images, train_labels, epochs=10)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "W3ZVOhugCaXA"
      },
      "source": [
        "As the model trains, the loss and accuracy metrics are displayed. This model reaches an accuracy of about 0.91 (or 91%) on the training data."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wCpr6DGyE28h"
      },
      "source": [
        "### Evaluate accuracy\n",
        "\n",
        "Next, compare how the model performs on the test dataset:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "id": "VflXLEeECaXC",
        "outputId": "84f4c8c5-4afb-4349-fe70-334cc01ef46f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 - 1s - 2ms/step - accuracy: 0.8842 - loss: 0.3354\n",
            "\n",
            "Test accuracy: 0.8841999769210815\n"
          ]
        }
      ],
      "source": [
        "test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)\n",
        "\n",
        "print('\\nTest accuracy:', test_acc)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yWfgsmVXCaXG"
      },
      "source": [
        "It turns out that the accuracy on the test dataset is a little less than the accuracy on the training dataset. This gap between training accuracy and test accuracy represents *overfitting*. Overfitting happens when a machine learning model performs worse on new, previously unseen inputs than it does on the training data. An overfitted model \"memorizes\" the noise and details in the training dataset to a point where it negatively impacts the performance of the model on the new data. For more information, see the following:\n",
        "*   [Demonstrate overfitting](https://www.tensorflow.org/tutorials/keras/overfit_and_underfit#demonstrate_overfitting)\n",
        "*   [Strategies to prevent overfitting](https://www.tensorflow.org/tutorials/keras/overfit_and_underfit#strategies_to_prevent_overfitting)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "v-PyD1SYE28q"
      },
      "source": [
        "### Make predictions\n",
        "\n",
        "With the model trained, you can use it to make predictions about some images.\n",
        "Attach a softmax layer to convert the model's linear outputs—[logits](https://developers.google.com/machine-learning/glossary#logits)—to probabilities, which should be easier to interpret."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "id": "DnfNA0CrQLSD"
      },
      "outputs": [],
      "source": [
        "probability_model = tf.keras.Sequential([model,\n",
        "                                         tf.keras.layers.Softmax()])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "id": "Gl91RPhdCaXI",
        "outputId": "7084a9ed-07dd-4bc0-8b1b-27d53066444c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m313/313\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 1ms/step\n"
          ]
        }
      ],
      "source": [
        "predictions = probability_model.predict(test_images)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "x9Kk1voUCaXJ"
      },
      "source": [
        "Here, the model has predicted the label for each image in the testing set. Let's take a look at the first prediction:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "id": "3DmJEUinCaXK",
        "outputId": "b983a68e-0a47-4ab0-fac1-b9013ba38219",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.019, 0.   ,\n",
              "       0.981], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "predictions[0].round(3)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-hw1hgeSCaXN"
      },
      "source": [
        "A prediction is an array of 10 numbers. They represent the model's \"confidence\" that the image corresponds to each of the 10 different articles of clothing. You can see which label has the highest confidence value:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "qsqenuPnCaXO",
        "outputId": "ed61c107-0622-47ba-fac9-90d2824009bd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ],
      "source": [
        "np.argmax(predictions[0])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E51yS7iCCaXO"
      },
      "source": [
        "So, the model is most confident that this image is an ankle boot, or `class_names[9]`. Examining the test label shows that this classification is correct:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "id": "Sd7Pgsu6CaXP",
        "outputId": "b7283b99-bc28-482a-e171-5fdbb4e3f85c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "9"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "test_labels[0]"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ygh2yYC972ne"
      },
      "source": [
        "Define functions to graph the full set of 10 class predictions."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "id": "DvYmmrpIy6Y1"
      },
      "outputs": [],
      "source": [
        "def plot_image(i, predictions_array, true_label, img):\n",
        "  true_label, img = true_label[i], img[i]\n",
        "  plt.grid(False)\n",
        "  plt.xticks([])\n",
        "  plt.yticks([])\n",
        "\n",
        "  plt.imshow(img, cmap=plt.cm.binary)\n",
        "\n",
        "  predicted_label = np.argmax(predictions_array)\n",
        "  if predicted_label == true_label:\n",
        "    color = 'blue'\n",
        "  else:\n",
        "    color = 'red'\n",
        "\n",
        "  plt.xlabel(\"{} {:2.0f}% ({})\".format(class_names[predicted_label],\n",
        "                                100*np.max(predictions_array),\n",
        "                                class_names[true_label]),\n",
        "                                color=color)\n",
        "\n",
        "def plot_value_array(i, predictions_array, true_label):\n",
        "  true_label = true_label[i]\n",
        "  plt.grid(False)\n",
        "  plt.xticks(range(10))\n",
        "  plt.yticks([])\n",
        "  thisplot = plt.bar(range(10), predictions_array, color=\"#777777\")\n",
        "  plt.ylim([0, 1])\n",
        "  predicted_label = np.argmax(predictions_array)\n",
        "\n",
        "  thisplot[predicted_label].set_color('red')\n",
        "  thisplot[true_label].set_color('blue')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Zh9yABaME29S"
      },
      "source": [
        "### Verify predictions\n",
        "\n",
        "With the model trained, you can use it to make predictions about some images."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d4Ov9OFDMmOD"
      },
      "source": [
        "Let's look at the 0th image, predictions, and prediction array. Correct prediction labels are blue and incorrect prediction labels are red. The number gives the percentage (out of 100) for the predicted label."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "HV5jw-5HwSmO",
        "outputId": "e49d1d7f-2598-48c6-8570-988cd5c45062",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x300 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "i = 0\n",
        "plt.figure(figsize=(6,3))\n",
        "plt.subplot(1,2,1)\n",
        "plot_image(i, predictions[i], test_labels, test_images)\n",
        "plt.subplot(1,2,2)\n",
        "plot_value_array(i, predictions[i],  test_labels)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {
        "id": "Ko-uzOufSCSe",
        "outputId": "2ecb0e7a-229a-4209-9fbf-ea737cd36fa5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 291
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x300 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "i = 12\n",
        "plt.figure(figsize=(6,3))\n",
        "plt.subplot(1,2,1)\n",
        "plot_image(i, predictions[i], test_labels, test_images)\n",
        "plt.subplot(1,2,2)\n",
        "plot_value_array(i, predictions[i],  test_labels)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kgdvGD52CaXR"
      },
      "source": [
        "Let's plot several images with their predictions. Note that the model can be wrong even when very confident."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "metadata": {
        "id": "hQlnbqaw2Qu_",
        "outputId": "3226f540-be9e-4232-ae29-6b10bb22224f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 919
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x1000 with 30 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Plot the first X test images, their predicted labels, and the true labels.\n",
        "# Color correct predictions in blue and incorrect predictions in red.\n",
        "num_rows = 5\n",
        "num_cols = 3\n",
        "num_images = num_rows*num_cols\n",
        "plt.figure(figsize=(2*2*num_cols, 2*num_rows))\n",
        "for i in range(num_images):\n",
        "  plt.subplot(num_rows, 2*num_cols, 2*i+1)\n",
        "  plot_image(i, predictions[i], test_labels, test_images)\n",
        "  plt.subplot(num_rows, 2*num_cols, 2*i+2)\n",
        "  plot_value_array(i, predictions[i], test_labels)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "R32zteKHCaXT"
      },
      "source": [
        "## Use the trained model\n",
        "\n",
        "Finally, use the trained model to make a prediction about a single image."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "metadata": {
        "id": "yRJ7JU7JCaXT",
        "outputId": "3b4be807-a8ed-4c4a-d3f3-b9969f9b6d44",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(28, 28)\n"
          ]
        }
      ],
      "source": [
        "# Grab an image from the test dataset.\n",
        "img = test_images[1]\n",
        "\n",
        "print(img.shape)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vz3bVp21CaXV"
      },
      "source": [
        "`tf.keras` models are optimized to make predictions on a *batch*, or collection, of examples at once. Accordingly, even though you're using a single image, you need to add it to a list:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "metadata": {
        "id": "lDFh5yF_CaXW",
        "outputId": "50ee2d9a-bf59-4026-fae4-b423c5fb19dd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1, 28, 28)\n"
          ]
        }
      ],
      "source": [
        "# Add the image to a batch where it's the only member.\n",
        "img = (np.expand_dims(img,0))\n",
        "\n",
        "print(img.shape)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "my_img = test_images[0]\n",
        "\n",
        "print(np.expand_dims(my_img,0).shape)\n",
        "\n",
        "flattened = tf.keras.layers.Flatten(input_shape=(28, 28))(my_img)\n",
        "print(flattened.shape)\n",
        "\n",
        "expanded_img = np.expand_dims(my_img,0)\n",
        "\n",
        "input_tensor = tf.keras.Input(shape=(28, 28, 1))  # Define input shape\n",
        "conv_layer = tf.keras.layers.Conv2D(32, (3, 3), activation='relu')(input_tensor)\n",
        "\n",
        "conv_layer2 = tf.keras.layers.Conv2D(64, (3, 3), activation='relu')(conv_layer)\n",
        "\n",
        "model = tf.keras.Model(inputs=input_tensor, outputs=conv_layer2)\n",
        "conv_output = model(expanded_img)  # Pass input tensor to the model\n",
        "\n",
        "print(model.summary())\n",
        "print(conv_output.shape)\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "oqnM95Xuq27z",
        "outputId": "d420e71a-7aa3-43f3-da47-0f0da01cc330",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        }
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1, 28, 28)\n",
            "(28, 28)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1mModel: \"functional_9\"\u001b[0m\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional_9\"</span>\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ input_layer_9 (\u001b[38;5;33mInputLayer\u001b[0m)           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m1\u001b[0m)           │               \u001b[38;5;34m0\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ conv2d_13 (\u001b[38;5;33mConv2D\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m32\u001b[0m)          │             \u001b[38;5;34m320\u001b[0m │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ conv2d_14 (\u001b[38;5;33mConv2D\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m24\u001b[0m, \u001b[38;5;34m24\u001b[0m, \u001b[38;5;34m64\u001b[0m)          │          \u001b[38;5;34m18,496\u001b[0m │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
              "┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
              "│ input_layer_9 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)           │               <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ conv2d_13 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)          │             <span style=\"color: #00af00; text-decoration-color: #00af00\">320</span> │\n",
              "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
              "│ conv2d_14 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)          │          <span style=\"color: #00af00; text-decoration-color: #00af00\">18,496</span> │\n",
              "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m18,816\u001b[0m (73.50 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">18,816</span> (73.50 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m18,816\u001b[0m (73.50 KB)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">18,816</span> (73.50 KB)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
            ],
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
              "</pre>\n"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "None\n",
            "(1, 24, 24, 64)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EQ5wLTkcCaXY"
      },
      "source": [
        "Now predict the correct label for this image:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "metadata": {
        "id": "o_rzNSdrCaXY",
        "outputId": "4276e582-d97e-4fc6-84e3-06382476a303",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step\n",
            "[[1.9455185e-06 1.0899622e-13 9.9795973e-01 1.4795463e-11 1.9877446e-03\n",
            "  1.8130166e-15 5.0614228e-05 2.3005172e-19 1.9757712e-10 1.7620959e-15]]\n"
          ]
        }
      ],
      "source": [
        "predictions_single = probability_model.predict(img)\n",
        "\n",
        "print(predictions_single)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "metadata": {
        "id": "6Ai-cpLjO-3A",
        "outputId": "b783a54b-0f17-4e19-bfe3-ea5ea2808562",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        }
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plot_value_array(1, predictions_single[0], test_labels)\n",
        "_ = plt.xticks(range(10), class_names, rotation=45)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cU1Y2OAMCaXb"
      },
      "source": [
        "`tf.keras.Model.predict` returns a list of lists—one list for each image in the batch of data. Grab the predictions for our (only) image in the batch:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "metadata": {
        "id": "2tRmdq_8CaXb",
        "outputId": "1a4aa467-a593-4ddd-8ea7-710325def55f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ],
      "source": [
        "np.argmax(predictions_single[0])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YFc2HbEVCaXd"
      },
      "source": [
        "And the model predicts a label as expected.\n",
        "\n",
        "To learn more about building models with Keras, see the [Keras guides](https://www.tensorflow.org/guide/keras)."
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "classification.ipynb",
      "toc_visible": true,
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}